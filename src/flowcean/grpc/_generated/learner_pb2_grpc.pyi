"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import grpc
import grpc.aio
from . import learner_pb2
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class LearnerStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Train: grpc.UnaryStreamMultiCallable[
        learner_pb2.DataPackage,
        learner_pb2.StatusMessage,
    ]
    Predict: grpc.UnaryUnaryMultiCallable[
        learner_pb2.DataPackage,
        learner_pb2.Prediction,
    ]
    Export: grpc.UnaryUnaryMultiCallable[
        learner_pb2.Empty,
        learner_pb2.Empty,
    ]

class LearnerAsyncStub:
    Train: grpc.aio.UnaryStreamMultiCallable[
        learner_pb2.DataPackage,
        learner_pb2.StatusMessage,
    ]
    Predict: grpc.aio.UnaryUnaryMultiCallable[
        learner_pb2.DataPackage,
        learner_pb2.Prediction,
    ]
    Export: grpc.aio.UnaryUnaryMultiCallable[
        learner_pb2.Empty,
        learner_pb2.Empty,
    ]

class LearnerServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Train(
        self,
        request: learner_pb2.DataPackage,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[learner_pb2.StatusMessage], collections.abc.AsyncIterator[learner_pb2.StatusMessage]]: ...
    @abc.abstractmethod
    def Predict(
        self,
        request: learner_pb2.DataPackage,
        context: _ServicerContext,
    ) -> typing.Union[learner_pb2.Prediction, collections.abc.Awaitable[learner_pb2.Prediction]]: ...
    @abc.abstractmethod
    def Export(
        self,
        request: learner_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[learner_pb2.Empty, collections.abc.Awaitable[learner_pb2.Empty]]: ...

def add_LearnerServicer_to_server(servicer: LearnerServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
