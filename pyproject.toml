[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "flowcean"
dynamic = ["version"]
description = "automatic generation of models for cyber-physical systems."
readme = "README.md"
requires-python = ">=3.12"
keywords = []
authors = [
  { name = "The AGenC Team", email = "agenc.team@tuhh.de" }
]

dependencies = [
  "numpy",
  "polars",
  "ruamel.yaml",
  "typing-extensions",
]

[project.urls]
Documentation = "https://www3.tuhh.de/agenc/"
Issues = "https://collaborating.tuhh.de/w-6/forschung/agenc/agenc/-/issues"
Source = "https://collaborating.tuhh.de/w-6/forschung/agenc/agenc"

[project.optional-dependencies]
all = [
  "flowcean[sklearn]",
  "flowcean[lightning]",
  "flowcean[grpc]",
]

sklearn = [
  "scikit-learn",
]
lightning = [
  "lightning",
  "tensorboard",
]
grpc = [
  "grpcio",
  "docker",
  "protobuf",
]

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_unused_ignores = true
exclude = [
  "^src/flowcean/learners/grpc/_generated/.*$", # generated by protoc
]

[[tool.mypy.overrides]]
module = [
  "sklearn.*",
  "joblib.*",
  "docker.*",
  "scipy.*",
]
ignore_missing_imports = true

[tool.pyright]
ignore = [
  "src/flowcean/learners/grpc/_generated/*",
]
pythonVersion = "3.12"
strict = [
  "src/flowcean/core",
]

[tool.coverage.run]
source_pkgs = ["flowcean", "tests"]
omit = [
  "src/flowcean/__about__.py",
  "src/flowcean/learners/grpc/_generated/*",
]
branch = true
parallel = true

[tool.coverage.paths]
flowcean = ["src/flowcean", "*/flowcean/src/flowcean"]
tests = ["tests", "*/flowcean/tests"]

[tool.coverage.report]
exclude_also = [
  "pass",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.version]
path = "src/flowcean/__about__.py"

[tool.hatch.env]
requires = [
  "hatch-mkdocs",
]

[tool.hatch.env.collectors.mkdocs.docs]
path = "mkdocs.yml"

[tool.hatch.envs.default]
features = [
  "all",
]

[tool.hatch.envs.hatch-test]
features = [
  "all",
]

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff.toml"

[tool.hatch.envs.dev]
dependencies = [
  "pytest",
  "mkdocs-gen-files",
]

[tool.hatch.envs.tests]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.tests.scripts]
run = "coverage run --module pytest {args:tests}"
report = [
  "run",
  "- coverage combine",
  "coverage report",
]
report-xml = [
  "report",
  "coverage xml",
]
report-html = [
  "report",
  "coverage html",
]

[tool.hatch.envs.types]
dependencies = [
  "pytest",
  "pyright",
]
[tool.hatch.envs.types.scripts]
check = "pyright {args:src/flowcean tests examples}"

[tool.hatch.envs.examples]
[tool.hatch.envs.examples.scripts]
active_learning = "cd examples/active_learning && python run.py"
automatic_lashing_platform = "cd examples/automatic_lashing_platform && python run.py"
boiler = "cd examples/boiler && python run.py"
coffee_machine = "cd examples/coffee_machine && python run.py"
failure_time_prediction = "cd examples/failure_time_prediction && python run.py"
linear_data = "cd examples/linear_data && python run.py"
one_tank = "cd examples/one_tank && python run.py"
