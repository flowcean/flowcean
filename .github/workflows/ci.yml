name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
    types: [checks_requested]

jobs:
  check:
    name: Checks
    runs-on:
      - self-hosted
      - itl
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.1"
          prune-cache: false
          cache-local-path: "${{ runner.workspace }}/.cache/uv"

      - name: Set up just
        uses: extractions/setup-just@v2

      - name: Run checks
        run: just check

  tests:
    name: Tests
    runs-on:
      - self-hosted
      - itl
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.1"
          prune-cache: false
          cache-local-path: "${{ runner.workspace }}/.cache/uv"

      - name: Set up just
        uses: extractions/setup-just@v2

      - name: Run tests
        run: just test

  docs:
    name: Documentation
    runs-on:
      - self-hosted
      - itl
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.1"
          prune-cache: false
          cache-local-path: "${{ runner.workspace }}/.cache/uv"

      - name: Set up just
        uses: extractions/setup-just@v2

      - name: Build docs
        run: just docs

  examples:
    name: Examples
    strategy:
      matrix:
        example: ["boiler", "failure_time_prediction", "linear_data", "one_tank"]
    runs-on:
      - self-hosted
      - itl
    env:
      CUDA_VISIBLE_DEVICES: ""
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.1"
          prune-cache: false
          cache-local-path: "${{ runner.workspace }}/.cache/uv"

      - name: Set up just
        uses: extractions/setup-just@v2

      - name: Set up DVC
        run: |
          uv run dvc --version
          uv run dvc remote modify --local itl-nas password ${{ secrets.ITL_NAS_DVC_SHARE_PASSWORD }}
          uv run dvc config cache.dir ${{ runner.workspace }}/.cache/dvc

      - name: DVC pull
        run: |
          uv run dvc pull --verbose --recursive examples/${{ matrix.example }}

      - name: Run Example [${{ matrix.example }}]
        run: |
          just examples-${{ matrix.example }}
