name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  publish:
    name: Publish
    runs-on:
      - self-hosted
      - itl
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.1"
          prune-cache: false
          cache-local-path: "${{ runner.workspace }}/.cache/uv"

      - name: Parse version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/*/v}
          # Check if the version has a pre-release segment (a, b, or rc followed by digits)
          # or a developmental release segment (".dev" followed by digits).
          if [[ "$VERSION" =~ ((a|b|rc)[0-9]+)|(\.dev[0-9]+) ]]; then
            IS_PRERELEASE=true
          else
            IS_PRERELEASE=false
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "is_prerelease=$IS_PRERELEASE" >> $GITHUB_OUTPUT

      - name: Update project version
        run: |
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml
        env:
          RELEASE_VERSION: ${{ steps.version.outputs.version }}

      - name: Build package
        run: uvx --from build pyproject-build --installer uv

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.version.outputs.is_prerelease }}
          files: |
            dist/flowcean-*.tar.gz

      - name: Publish package
        run: uvx twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
